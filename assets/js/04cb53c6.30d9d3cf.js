"use strict";(self.webpackChunkcurator_site=self.webpackChunkcurator_site||[]).push([[2068],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var i=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,i,a=function(e,t){if(null==e)return{};var r,i,a={},n=Object.keys(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=i.createContext({}),l=function(e){var t=i.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):u(u({},t),e)),r},d=function(e){var t=l(e.components);return i.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=l(r),m=a,f=c["".concat(s,".").concat(m)]||c[m]||p[m]||n;return r?i.createElement(f,u(u({ref:t},d),{},{components:r})):i.createElement(f,u({ref:t},d))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,u=new Array(n);u[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:a,u[1]=o;for(var l=2;l<n;l++)u[l]=r[l];return i.createElement.apply(null,u)}return i.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8590:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>u,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>l});var i=r(7462),a=(r(7294),r(3905));const n={sidebar_label:"Simple Distributed Queue"},u="Recipe: Simple Distributed Queue",o={unversionedId:"recipes-simple-distributed-queue",id:"recipes-simple-distributed-queue",title:"Recipe: Simple Distributed Queue",description:"We recommend that you do NOT use ZooKeeper for Queues. Please see Tech Note 4 for details.",source:"@site/docs/recipes-simple-distributed-queue.md",sourceDirName:".",slug:"/recipes-simple-distributed-queue",permalink:"/docs/recipes-simple-distributed-queue",draft:!1,editUrl:"https://github.com/apache/curator-site/tree/main/docs/recipes-simple-distributed-queue.md",tags:[],version:"current",lastUpdatedBy:"dependabot[bot]",lastUpdatedAt:1698746944,formattedLastUpdatedAt:"Oct 31, 2023",frontMatter:{sidebar_label:"Simple Distributed Queue"},sidebar:"docs",previous:{title:"Distributed Delay Queue",permalink:"/docs/recipes-distributed-delay-queue"},next:{title:"Curator Async",permalink:"/docs/async"}},s={},l=[{value:"Description",id:"description",level:2},{value:"Participating Classes",id:"participating-classes",level:2},{value:"Usage",id:"usage",level:2},{value:"Creating a SimpleDistributedQueue",id:"creating-a-simpledistributedqueue",level:3},{value:"Add to the queue",id:"add-to-the-queue",level:3},{value:"Take from the queue",id:"take-from-the-queue",level:3},{value:"Error Handling",id:"error-handling",level:2}],d={toc:l},c="wrapper";function p(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,i.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"recipe-simple-distributed-queue"},"Recipe: Simple Distributed Queue"),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"We recommend that you do NOT use ZooKeeper for Queues. Please see ",(0,a.kt)("a",{parentName:"p",href:"/docs/tech-note-04"},"Tech Note 4")," for details.")),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"A drop-in replacement for the DistributedQueue that comes with the ZK distribution."),(0,a.kt)("h2",{id:"participating-classes"},"Participating Classes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"SimpleDistributedQueue")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("h3",{id:"creating-a-simpledistributedqueue"},"Creating a SimpleDistributedQueue"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Parameters:\n// client - the client\n// path - path to store queue nodes\npublic SimpleDistributedQueue(CuratorFramework client, String path);\n")),(0,a.kt)("h3",{id:"add-to-the-queue"},"Add to the queue"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Inserts data into queue.\n// Parameters:\n// data - the data\n// Returns:\n// true if data was successfully added\npublic boolean offer(byte[] data) throws Exception;\n")),(0,a.kt)("h3",{id:"take-from-the-queue"},"Take from the queue"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Removes the head of the queue and returns it, blocks until it succeeds.\n// Returns:\n// The former head of the queue\npublic byte[] take() throws Exception;\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"See also the Javadoc for additional methods.")),(0,a.kt)("h2",{id:"error-handling"},"Error Handling"),(0,a.kt)("p",null,"It is strongly recommended that you add a ",(0,a.kt)("inlineCode",{parentName:"p"},"ConnectionStateListener")," and watch for SUSPENDED and LOST state changes."))}p.isMDXComponent=!0}}]);