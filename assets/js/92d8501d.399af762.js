"use strict";(self.webpackChunkcurator_site=self.webpackChunkcurator_site||[]).push([[8859],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=s(r),h=a,m=p["".concat(l,".").concat(h)]||p[h]||u[h]||i;return r?n.createElement(m,c(c({ref:t},d),{},{components:r})):n.createElement(m,c({ref:t},d))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,c=new Array(i);c[0]=h;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[p]="string"==typeof e?e:a,c[1]=o;for(var s=2;s<i;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},7523:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const i={sidebar_label:"Node Cache"},c="Recipe: Node Cache",o={unversionedId:"recipes-node-cache",id:"recipes-node-cache",title:"Recipe: Node Cache",description:"Description",source:"@site/docs/recipes-node-cache.md",sourceDirName:".",slug:"/recipes-node-cache",permalink:"/docs/recipes-node-cache",draft:!1,editUrl:"https://github.com/apache/curator-site/tree/main/docs/recipes-node-cache.md",tags:[],version:"current",lastUpdatedBy:"Kezhu Wang",lastUpdatedAt:1692089714,formattedLastUpdatedAt:"Aug 15, 2023",frontMatter:{sidebar_label:"Node Cache"},sidebar:"docs",previous:{title:"Path Cache",permalink:"/docs/recipes-path-cache"},next:{title:"Tree Cache",permalink:"/docs/recipes-tree-cache"}},l={},s=[{value:"Description",id:"description",level:2},{value:"Participating Classes",id:"participating-classes",level:2},{value:"Creating a NodeChildrenCache",id:"creating-a-nodechildrencache",level:2},{value:"General Usage",id:"general-usage",level:2},{value:"Error Handling",id:"error-handling",level:2}],d={toc:s},p="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"recipe-node-cache"},"Recipe: Node Cache"),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"A Node Cache is used to watch a ZNode. Whenever the data is modified or the ZNode is deleted, the Node Cache will change its state to contain the current data (or null if ZNode was deleted)."),(0,a.kt)("h2",{id:"participating-classes"},"Participating Classes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"NodeCache"),(0,a.kt)("li",{parentName:"ul"},"NodeCacheListener"),(0,a.kt)("li",{parentName:"ul"},"ChildData")),(0,a.kt)("h2",{id:"creating-a-nodechildrencache"},"Creating a NodeChildrenCache"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Parameters:\n// client - the client\n// path - path to cache\npublic NodeCache(CuratorFramework client, String path);\n")),(0,a.kt)("h2",{id:"general-usage"},"General Usage"),(0,a.kt)("p",null,"The cache must be started by calling ",(0,a.kt)("inlineCode",{parentName:"p"},"start()"),". Call ",(0,a.kt)("inlineCode",{parentName:"p"},"close()")," when you are through with the cache."),(0,a.kt)("p",null,"At any time, call ",(0,a.kt)("inlineCode",{parentName:"p"},"getCurrentData()")," to get the current state of the cache. You can also register to be notified when a change occurs by calling ",(0,a.kt)("inlineCode",{parentName:"p"},"getListenable()")," and then:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Add a change listener\n// Parameters:\n// listener - the listener\npublic void addListener(NodeCacheListener listener);\n")),(0,a.kt)("h2",{id:"error-handling"},"Error Handling"),(0,a.kt)("p",null,"NodeCache instances internally monitor a ",(0,a.kt)("inlineCode",{parentName:"p"},"ConnectionStateListener"),"."))}u.isMDXComponent=!0}}]);