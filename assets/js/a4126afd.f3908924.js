"use strict";(self.webpackChunkcurator_site=self.webpackChunkcurator_site||[]).push([[8395],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var i=r(7294);function u(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function n(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){u(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,i,u=function(e,t){if(null==e)return{};var r,i,u={},a=Object.keys(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||(u[r]=e[r]);return u}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(u[r]=e[r])}return u}var o=i.createContext({}),d=function(e){var t=i.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):n(n({},t),e)),r},l=function(e){var t=d(e.components);return i.createElement(o.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var r=e.components,u=e.mdxType,a=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=d(r),m=u,f=p["".concat(o,".").concat(m)]||p[m]||c[m]||a;return r?i.createElement(f,n(n({ref:t},l),{},{components:r})):i.createElement(f,n({ref:t},l))}));function f(e,t){var r=arguments,u=t&&t.mdxType;if("string"==typeof e||u){var a=r.length,n=new Array(a);n[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[p]="string"==typeof e?e:u,n[1]=s;for(var d=2;d<a;d++)n[d]=r[d];return i.createElement.apply(null,n)}return i.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7927:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>n,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var i=r(7462),u=(r(7294),r(3905));const a={sidebar_label:"Distributed ID Queue"},n="Recipe: Distributed ID Queue",s={unversionedId:"recipes-distributed-id-queue",id:"recipes-distributed-id-queue",title:"Recipe: Distributed ID Queue",description:"We recommend that you do NOT use ZooKeeper for Queues. Please see Tech Note 4 for details.",source:"@site/docs/recipes-distributed-id-queue.md",sourceDirName:".",slug:"/recipes-distributed-id-queue",permalink:"/docs/recipes-distributed-id-queue",draft:!1,editUrl:"https://github.com/apache/curator-site/tree/main/docs/recipes-distributed-id-queue.md",tags:[],version:"current",lastUpdatedBy:"Kezhu Wang",lastUpdatedAt:1692089714,formattedLastUpdatedAt:"Aug 15, 2023",frontMatter:{sidebar_label:"Distributed ID Queue"},sidebar:"docs",previous:{title:"Distributed Queue",permalink:"/docs/recipes-distributed-queue"},next:{title:"Distributed Priority Queue",permalink:"/docs/recipes-distributed-priority-queue"}},o={},d=[{value:"Description",id:"description",level:2},{value:"Participating Classes",id:"participating-classes",level:2},{value:"Creating a DistributedIdQueue",id:"creating-a-distributedidqueue",level:2},{value:"General Usage",id:"general-usage",level:2}],l={toc:d},p="wrapper";function c(e){let{components:t,...r}=e;return(0,u.kt)(p,(0,i.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,u.kt)("h1",{id:"recipe-distributed-id-queue"},"Recipe: Distributed ID Queue"),(0,u.kt)("admonition",{type:"caution"},(0,u.kt)("p",{parentName:"admonition"},"We recommend that you do NOT use ZooKeeper for Queues. Please see ",(0,u.kt)("a",{parentName:"p",href:"/docs/tech-note-04"},"Tech Note 4")," for details.")),(0,u.kt)("h2",{id:"description"},"Description"),(0,u.kt)("p",null,"This is an alternate version of ",(0,u.kt)("a",{parentName:"p",href:"/docs/recipes-distributed-queue"},"Distributed Queue")," that supports assigning IDs to the items added to the queue. Items put into the queue are guaranteed to be ordered (by means of ZK's PERSISTENTSEQUENTIAL node). If a single consumer takes items out of the queue, they will be ordered FIFO. If ordering is important, use a LeaderSelector to nominate a single consumer."),(0,u.kt)("h2",{id:"participating-classes"},"Participating Classes"),(0,u.kt)("ul",null,(0,u.kt)("li",{parentName:"ul"},"QueueBuilder"),(0,u.kt)("li",{parentName:"ul"},"QueueConsumer"),(0,u.kt)("li",{parentName:"ul"},"QueueSerializer"),(0,u.kt)("li",{parentName:"ul"},"DistributedQueue")),(0,u.kt)("h2",{id:"creating-a-distributedidqueue"},"Creating a DistributedIdQueue"),(0,u.kt)("p",null,"See ",(0,u.kt)("a",{parentName:"p",href:"/docs/recipes-distributed-queue"},"Distributed Queue")," for details of using the builder, the only difference is to use the ",(0,u.kt)("inlineCode",{parentName:"p"},"buildIdQueue()")," method."),(0,u.kt)("h2",{id:"general-usage"},"General Usage"),(0,u.kt)("p",null,"The queue must be started via the ",(0,u.kt)("inlineCode",{parentName:"p"},"start()")," method. Call ",(0,u.kt)("inlineCode",{parentName:"p"},"close()")," when you are done with the queue."),(0,u.kt)("p",null,"To add messages to the queue:"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-java"},"queue.put(aMessage, messageId);\n")),(0,u.kt)("p",null,"To remove messages from the queue:"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-java"},"int numberRemoved = queue.remove(messageId);\n")),(0,u.kt)("p",null,"Your consumer (",(0,u.kt)("inlineCode",{parentName:"p"},"QueueConsumer.consumeMessage()"),") will get called as messages arrive."),(0,u.kt)("p",null,"The lock safety and error handling are the same as for ",(0,u.kt)("a",{parentName:"p",href:"/docs/recipes-distributed-queue"},"Distributed Queue"),"."))}c.isMDXComponent=!0}}]);