"use strict";(self.webpackChunkcurator_site=self.webpackChunkcurator_site||[]).push([[543],{3359:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"recipes-curator-cache","title":"Recipe: Curator Cache","description":"CuratorCache requires ZooKeeper 3.6+","source":"@site/docs/recipes-curator-cache.md","sourceDirName":".","slug":"/recipes-curator-cache","permalink":"/docs/recipes-curator-cache","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/curator-site/tree/main/docs/recipes-curator-cache.md","tags":[],"version":"current","lastUpdatedBy":"tison","lastUpdatedAt":1741292192000,"frontMatter":{"sidebar_label":"Curator Cache"},"sidebar":"docs","previous":{"title":"Distributed Atomic Long","permalink":"/docs/recipes-distributed-atomic-long"},"next":{"title":"Path Cache","permalink":"/docs/recipes-path-cache"}}');var n=r(5105),c=r(6413);const i={sidebar_label:"Curator Cache"},o="Recipe: Curator Cache",s={},l=[{value:"Description",id:"description",level:2},{value:"Participating Classes",id:"participating-classes",level:2},{value:"Creating a CuratorCache",id:"creating-a-curatorcache",level:2},{value:"General Usage",id:"general-usage",level:2},{value:"Error Handling",id:"error-handling",level:2}];function h(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"recipe-curator-cache",children:"Recipe: Curator Cache"})}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsx)(t.p,{children:"CuratorCache requires ZooKeeper 3.6+"})}),"\n",(0,n.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,n.jsx)(t.p,{children:"A utility that attempts to keep the data from a node locally cached. Optionally the entire tree of children below the node can also be cached. Will respond to update/create/delete events, pull down the data, etc. You can register listeners that will get notified when changes occur."}),"\n",(0,n.jsx)(t.h2,{id:"participating-classes",children:"Participating Classes"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"CuratorCache"}),"\n",(0,n.jsx)(t.li,{children:"CuratorCacheListener"}),"\n",(0,n.jsx)(t.li,{children:"ChildData"}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"creating-a-curatorcache",children:"Creating a CuratorCache"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"// Parameters:\n// client - the client\n// path - path to watch\n// options - empty or one or more options\nCuratorCache build(CuratorFramework client, String path, Options... options);\n"})}),"\n",(0,n.jsxs)(t.p,{children:["There is a builder factory available for additional options when building the cache instance. See ",(0,n.jsx)(t.code,{children:"CuratorCacheBuilder"})," for details."]}),"\n",(0,n.jsx)(t.h2,{id:"general-usage",children:"General Usage"}),"\n",(0,n.jsxs)(t.p,{children:["The cache must be started by calling ",(0,n.jsx)(t.code,{children:"start()"}),". Call ",(0,n.jsx)(t.code,{children:"close()"})," when you are through with the cache."]}),"\n",(0,n.jsxs)(t.p,{children:["At any time, call the various accessor methods to get the current state of the cache. You can also register to be notified when a change occurs by calling ",(0,n.jsx)(t.code,{children:"listenable()"})," and then registering a listener for events."]}),"\n",(0,n.jsx)(t.p,{children:"See the examples for an example usage."}),"\n",(0,n.jsx)(t.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,n.jsx)(t.p,{children:"CuratorCache instances internally monitor connection losses, etc. automatically rebuilding the cache on reconnection."})]})}function d(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},6413:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>o});var a=r(8101);const n={},c=a.createContext(n);function i(e){const t=a.useContext(c);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(c.Provider,{value:t},e.children)}}}]);