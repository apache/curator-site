"use strict";(self.webpackChunkcurator_site=self.webpackChunkcurator_site||[]).push([[3137],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>m});var a=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,i=function(e,r){if(null==e)return{};var t,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=a.createContext({}),s=function(e){var r=a.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},p=function(e){var r=s(e.components);return a.createElement(c.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},b=a.forwardRef((function(e,r){var t=e.components,i=e.mdxType,n=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(t),b=i,m=u["".concat(c,".").concat(b)]||u[b]||d[b]||n;return t?a.createElement(m,o(o({ref:r},p),{},{components:t})):a.createElement(m,o({ref:r},p))}));function m(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var n=t.length,o=new Array(n);o[0]=b;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var s=2;s<n;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},4036:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>n,metadata:()=>l,toc:()=>s});var a=t(7462),i=(t(7294),t(3905));const n={sidebar_label:"Barrier"},o="Recipe: Barrier",l={unversionedId:"recipes-barrier",id:"recipes-barrier",title:"Recipe: Barrier",description:"Description",source:"@site/docs/recipes-barrier.md",sourceDirName:".",slug:"/recipes-barrier",permalink:"/docs/recipes-barrier",draft:!1,editUrl:"https://github.com/apache/curator-site/tree/main/docs/recipes-barrier.md",tags:[],version:"current",lastUpdatedBy:"tison",lastUpdatedAt:1692088361,formattedLastUpdatedAt:"Aug 15, 2023",frontMatter:{sidebar_label:"Barrier"},sidebar:"docs",previous:{title:"Multi Shared Lock",permalink:"/docs/recipes-multi-shared-lock"},next:{title:"Double Barrier",permalink:"/docs/recipes-double-barrier"}},c={},s=[{value:"Description",id:"description",level:2},{value:"Participating Classes",id:"participating-classes",level:2},{value:"Creating a DistributedBarrier",id:"creating-a-distributedbarrier",level:2},{value:"General Usage",id:"general-usage",level:2},{value:"Error Handling",id:"error-handling",level:2}],p={toc:s},u="wrapper";function d(e){let{components:r,...t}=e;return(0,i.kt)(u,(0,a.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"recipe-barrier"},"Recipe: Barrier"),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,"An implementation of the Distributed Barrier ZK recipe."),(0,i.kt)("p",null,"Distributed systems use barriers to block processing of a set of nodes until a condition is met at which time all the nodes are allowed to proceed."),(0,i.kt)("h2",{id:"participating-classes"},"Participating Classes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"DistributedBarrier")),(0,i.kt)("h2",{id:"creating-a-distributedbarrier"},"Creating a DistributedBarrier"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"// Parameters:\n// client - client\n// barrierPath - path to use as the barrier\npublic DistributedBarrier(CuratorFramework client, String barrierPath);\n")),(0,i.kt)("h2",{id:"general-usage"},"General Usage"),(0,i.kt)("p",null,"To wait on the barrier:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public void waitOnBarrier();\n")),(0,i.kt)("p",null,"There are utilities for setting/removing the barrier:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"setBarrier();\nremoveBarrier();\n")),(0,i.kt)("h2",{id:"error-handling"},"Error Handling"),(0,i.kt)("p",null,"DistributedBarrier instances watch for connection loss and will throw an exception from ",(0,i.kt)("inlineCode",{parentName:"p"},"waitOnBarrier()"),"."))}d.isMDXComponent=!0}}]);