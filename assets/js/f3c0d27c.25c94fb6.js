"use strict";(self.webpackChunkcurator_site=self.webpackChunkcurator_site||[]).push([[5111],{1673:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"recipes-shared-lock","title":"Recipe: Shared Lock","description":"Description","source":"@site/docs/recipes-shared-lock.md","sourceDirName":".","slug":"/recipes-shared-lock","permalink":"/docs/recipes-shared-lock","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/curator-site/tree/main/docs/recipes-shared-lock.md","tags":[],"version":"current","lastUpdatedBy":"tison","lastUpdatedAt":1741313002000,"frontMatter":{"sidebar_label":"Shared Lock"},"sidebar":"docs","previous":{"title":"Shared Reentrant Lock","permalink":"/docs/recipes-shared-reentrant-lock"},"next":{"title":"Shared Reentrant Read Write Lock","permalink":"/docs/recipes-shared-reentrant-read-write-lock"}}');var a=r(5105),s=r(6413);const i={sidebar_label:"Shared Lock"},c="Recipe: Shared Lock",l={},o=[{value:"Description",id:"description",level:2},{value:"Participating Classes",id:"participating-classes",level:2},{value:"Create an InterProcessSemaphoreMutex",id:"create-an-interprocesssemaphoremutex",level:2},{value:"General Usage",id:"general-usage",level:2},{value:"Error Handling",id:"error-handling",level:2}];function d(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"recipe-shared-lock",children:"Recipe: Shared Lock"})}),"\n",(0,a.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,a.jsxs)(t.p,{children:["Fully distributed locks that are globally synchronous, meaning at any snapshot in time no two clients think they hold the same lock. Note: unlike InterProcessMutex this lock is ",(0,a.jsx)(t.em,{children:"not"})," reentrant."]}),"\n",(0,a.jsx)(t.h2,{id:"participating-classes",children:"Participating Classes"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"InterProcessSemaphoreMutex"}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"create-an-interprocesssemaphoremutex",children:"Create an InterProcessSemaphoreMutex"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:"// Parameters:\n// client - client\n// path - the path to lock\npublic InterProcessSemaphoreMutex(CuratorFramework client, String path);\n"})}),"\n",(0,a.jsx)(t.h2,{id:"general-usage",children:"General Usage"}),"\n",(0,a.jsx)(t.p,{children:"To acquire the lock, use one of the acquire methods:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:"// Acquire the mutex - blocking until it's available. Must be balanced by a call to release().\npublic void acquire();\n"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:"// Acquire the mutex - blocks until it's available or the given time expires. Must be balanced by a call to release().\n//\n// Parameters:\n// time - time to wait\n// unit - time unit\n// Returns:\n// true if the mutex was acquired, false otherwise\npublic boolean acquire(long time, TimeUnit unit);\n"})}),"\n",(0,a.jsx)(t.p,{children:"To release the mutex, call:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:"// Perform one release of the mutex if the calling thread is the same thread that acquired it.\npublic void release();\n"})}),"\n",(0,a.jsx)(t.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,a.jsxs)(t.p,{children:["It is strongly recommended that you add a ",(0,a.jsx)(t.code,{children:"ConnectionStateListener"})," and watch for SUSPENDED and LOST state changes."]}),"\n",(0,a.jsx)(t.p,{children:"If a SUSPENDED state is reported you cannot be certain that you still hold the lock unless you subsequently receive a RECONNECTED state. If a LOST state is reported it is certain that you no longer hold the lock."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},6413:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>c});var n=r(8101);const a={},s=n.createContext(a);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);