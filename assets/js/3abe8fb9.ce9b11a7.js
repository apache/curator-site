"use strict";(self.webpackChunkcurator_site=self.webpackChunkcurator_site||[]).push([[5521],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>f});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),g=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},s=function(e){var r=g(e.components);return n.createElement(c.Provider,{value:r},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=g(t),d=a,f=u["".concat(c,".").concat(d)]||u[d]||p[d]||o;return t?n.createElement(f,i(i({ref:r},s),{},{components:t})):n.createElement(f,i({ref:r},s))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var g=2;g<o;g++)i[g]=t[g];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3810:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>g});var n=t(7462),a=(t(7294),t(3905));const o={},i="Logging and Tracing",l={unversionedId:"logging",id:"logging",title:"Logging and Tracing",description:"Details",source:"@site/docs/logging.md",sourceDirName:".",slug:"/logging",permalink:"/docs/logging",draft:!1,editUrl:"https://github.com/apache/curator-site/tree/main/docs/logging.md",tags:[],version:"current",lastUpdatedBy:"tison",lastUpdatedAt:1692086414,formattedLastUpdatedAt:"Aug 15, 2023",frontMatter:{},sidebar:"docs",previous:{title:"Error Handling",permalink:"/docs/errors"},next:{title:"Tech Notes",permalink:"/docs/tech-notes"}},c={},g=[{value:"Details",id:"details",level:2},{value:"Logging",id:"logging",level:2},{value:"Tracing",id:"tracing",level:2}],s={toc:g},u="wrapper";function p(e){let{components:r,...t}=e;return(0,a.kt)(u,(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"logging-and-tracing"},"Logging and Tracing"),(0,a.kt)("h2",{id:"details"},"Details"),(0,a.kt)("p",null,"Curator is logging and tracing neutral. The Curator code is instrumented with logging and tracers but uses a driver mechanism that allows easy integration into your preferred logging and tracing frameworks."),(0,a.kt)("h2",{id:"logging"},"Logging"),(0,a.kt)("p",null,"Curator uses SLF4J (",(0,a.kt)("a",{parentName:"p",href:"https://www.slf4j.org/"},"https://www.slf4j.org/"),") for logging. SLF4J is a facade over logging that allows you to plug in any (or no) logging framework. See the SLF4J website for details."),(0,a.kt)("h2",{id:"tracing"},"Tracing"),(0,a.kt)("p",null,"Connect Curator tracing to your tracing framework via an instance of ",(0,a.kt)("inlineCode",{parentName:"p"},"TracerDriver")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"AdvancedTracerDriver"),". Curator calls the various methods (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"addTrace()")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"addCount()"),") and your instance proxies the calls to your tracing framework. Inform Curator of your tracing driver instance by calling ",(0,a.kt)("inlineCode",{parentName:"p"},"CuratorZookeeperClient.setTracerDriver()"),"."))}p.isMDXComponent=!0}}]);