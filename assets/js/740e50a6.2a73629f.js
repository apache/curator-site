"use strict";(self.webpackChunkcurator_site=self.webpackChunkcurator_site||[]).push([[6859],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return r?n.createElement(f,s(s({ref:t},p),{},{components:r})):n.createElement(f,s({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[d]="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8567:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const i={sidebar_label:"Persistent Node"},s="Recipe: Persistent Node",o={unversionedId:"recipes-persistent-node",id:"recipes-persistent-node",title:"Recipe: Persistent Node",description:"Description",source:"@site/docs/recipes-persistent-node.md",sourceDirName:".",slug:"/recipes-persistent-node",permalink:"/docs/recipes-persistent-node",draft:!1,editUrl:"https://github.com/apache/curator-site/tree/main/docs/recipes-persistent-node.md",tags:[],version:"current",lastUpdatedBy:"tison",lastUpdatedAt:1692147164,formattedLastUpdatedAt:"Aug 16, 2023",frontMatter:{sidebar_label:"Persistent Node"},sidebar:"docs",previous:{title:"Persistent Recursive Watcher",permalink:"/docs/recipes-persistent-watcher"},next:{title:"Persistent TTL Node",permalink:"/docs/recipes-persistent-ttl-node"}},l={},c=[{value:"Description",id:"description",level:2},{value:"Participating Classes",id:"participating-classes",level:2},{value:"Creating a PersistentNode",id:"creating-a-persistentnode",level:2},{value:"General Usage",id:"general-usage",level:2},{value:"Error Handling",id:"error-handling",level:2}],p={toc:c},d="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"recipe-persistent-node"},"Recipe: Persistent Node"),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"A persistent node is a node that attempts to stay present in ZooKeeper, even through connection and session interruptions."),(0,a.kt)("h2",{id:"participating-classes"},"Participating Classes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"PersistentNode")),(0,a.kt)("h2",{id:"creating-a-persistentnode"},"Creating a PersistentNode"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Parameters:\n// client - client instance\n// mode - creation mode\n// useProtection - if true, call CreateBuilder.withProtection()\n// basePath - the base path for the node\n// data - data for the node\n// useParentCreation - if true, call CreateBuilder.creatingParentContainersIfNeeded()\npublic PersistentNode(\n    CuratorFramework client,\n    CreateMode mode,\n    boolean useProtection,\n    String basePath,\n    byte[] data,\n    boolean useParentCreation\n);\n")),(0,a.kt)("h2",{id:"general-usage"},"General Usage"),(0,a.kt)("p",null,"PersistentNodes must be started:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"node.start();\n")),(0,a.kt)("p",null,"When you are through with the PersistentNode instance, you should call close:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"node.close();\n")),(0,a.kt)("p",null,"... this will delete the node"),(0,a.kt)("h2",{id:"error-handling"},"Error Handling"),(0,a.kt)("p",null,"PersistentNode instances internally handle all error states recreating the node as necessary."))}u.isMDXComponent=!0}}]);