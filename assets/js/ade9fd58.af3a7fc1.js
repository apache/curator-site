"use strict";(self.webpackChunkcurator_site=self.webpackChunkcurator_site||[]).push([[1903],{793:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>u,default:()=>c,frontMatter:()=>n,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"recipes-distributed-delay-queue","title":"Recipe: Distributed Delay Queue","description":"We recommend that you do NOT use ZooKeeper for Queues. Please see Tech Note 4 for details.","source":"@site/docs/recipes-distributed-delay-queue.md","sourceDirName":".","slug":"/recipes-distributed-delay-queue","permalink":"/docs/recipes-distributed-delay-queue","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/curator-site/tree/main/docs/recipes-distributed-delay-queue.md","tags":[],"version":"current","lastUpdatedBy":"tison","lastUpdatedAt":1739753658000,"frontMatter":{"sidebar_label":"Distributed Delay Queue"},"sidebar":"docs","previous":{"title":"Distributed Priority Queue","permalink":"/docs/recipes-distributed-priority-queue"},"next":{"title":"Simple Distributed Queue","permalink":"/docs/recipes-simple-distributed-queue"}}');var r=s(5105),a=s(6413);const n={sidebar_label:"Distributed Delay Queue"},u="Recipe: Distributed Delay Queue",l={},d=[{value:"Description",id:"description",level:2},{value:"Participating Classes",id:"participating-classes",level:2},{value:"Creating a DistributedDelayQueue",id:"creating-a-distributeddelayqueue",level:2},{value:"General Usage",id:"general-usage",level:2},{value:"Lock Safety",id:"lock-safety",level:2},{value:"Data Format",id:"data-format",level:2},{value:"Error Handling",id:"error-handling",level:2}];function o(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"recipe-distributed-delay-queue",children:"Recipe: Distributed Delay Queue"})}),"\n",(0,r.jsx)(t.admonition,{type:"caution",children:(0,r.jsxs)(t.p,{children:["We recommend that you do NOT use ZooKeeper for Queues. Please see ",(0,r.jsx)(t.a,{href:"/docs/tech-note-04",children:"Tech Note 4"})," for details."]})}),"\n",(0,r.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(t.p,{children:"An implementation of a Distributed Delay Queue. A Delay Queue is similar to a Priority Queue. When items are added to the queue, a delay value is given. The item will not be sent to a consumer until the time elapses."}),"\n",(0,r.jsx)(t.h2,{id:"participating-classes",children:"Participating Classes"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"QueueBuilder"}),"\n",(0,r.jsx)(t.li,{children:"QueueConsumer"}),"\n",(0,r.jsx)(t.li,{children:"QueueSerializer"}),"\n",(0,r.jsx)(t.li,{children:"DistributedDelayQueue"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"creating-a-distributeddelayqueue",children:"Creating a DistributedDelayQueue"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:"// Parameters:\n// client - the curator client\n// consumer - message consumer\n// serializer - serializer to use for items\n// queuePath - path to store queue\npublic static <T> QueueBuilder<T> builder(\n    CuratorFramework client,\n    QueueConsumer<T> consumer,\n    QueueSerializer<T> serializer,\n    java.lang.String queuePath\n);\n"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:"QueueBuilder<MessageType> builder = QueueBuilder.builder(client, consumer, serializer, path);\n// ... more builder method calls as needed ...\nDistributedDelayQueue<MessageType> queue = builder.buildDelayQueue();\n"})}),"\n",(0,r.jsx)(t.h2,{id:"general-usage",children:"General Usage"}),"\n",(0,r.jsxs)(t.p,{children:["The queue must be started via the ",(0,r.jsx)(t.code,{children:"start()"})," method. Call ",(0,r.jsx)(t.code,{children:"close()"})," when you are done with the queue."]}),"\n",(0,r.jsx)(t.p,{children:"To add messages to the queue:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:"queue.put(aMessage, delayUntilEpoch);\n"})}),"\n",(0,r.jsxs)(t.p,{children:["The consumer (",(0,r.jsx)(t.code,{children:"QueueConsumer.consumeMessage()"}),") will get called as messages arrive. ",(0,r.jsx)(t.code,{children:"delayUntilEpoch"})," is a future epoch (milliseconds) when this item will be available to consumers."]}),"\n",(0,r.jsx)(t.h2,{id:"lock-safety",children:"Lock Safety"}),"\n",(0,r.jsxs)(t.p,{children:["In the general usage case, the message is removed from the queue prior to the consumer being called. A more atomic mode is provided that removes the item from the queue only after the consumer successfully returns. To enable this mode, call the ",(0,r.jsx)(t.code,{children:"lockPath()"})," method of the Queue Builder. This uses a lock to make the message recoverable. A lock is held while the message is being processed - this prevents other processes from taking the message. The message will not be removed from the queue until the consumer functor returns. Thus, if there is a failure or the process dies, the message will get sent to another process. There is a small performance penalty for this behavior however."]}),"\n",(0,r.jsx)(t.h2,{id:"data-format",children:"Data Format"}),"\n",(0,r.jsxs)(t.p,{children:["Same as ",(0,r.jsx)(t.a,{href:"/docs/recipes-distributed-queue",children:"Distributed Queue"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"QueueConsumer"})," class extends ",(0,r.jsx)(t.code,{children:"ConnectionStateListener"}),". When the queue is started, it adds the listener to the Curator instance. Users of the ",(0,r.jsx)(t.code,{children:"DistributedPriorityQueue"})," must pay attention to any connection state changes."]}),"\n",(0,r.jsx)(t.p,{children:"If the SUSPENDED state is reported, the instance must assume that, until it receives a RECONNECTED state, the queue is no longer being updated. If the LOST state is reported, the queue is permanently down."})]})}function c(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},6413:(e,t,s)=>{s.d(t,{R:()=>n,x:()=>u});var i=s(8101);const r={},a=i.createContext(r);function n(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function u(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);