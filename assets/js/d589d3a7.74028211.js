"use strict";(self.webpackChunkcurator_site=self.webpackChunkcurator_site||[]).push([[7162],{9613:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var n=r(9496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(r),m=a,h=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(h,i(i({ref:t},u),{},{components:r})):n.createElement(h,i({ref:t},u))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3671:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(7263),a=(r(9496),r(9613));const o={},i="Getting Started",l={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"Learn ZooKeeper",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/docs/getting-started",draft:!1,editUrl:"https://github.com/apache/curator-site/tree/main/docs/getting-started.md",tags:[],version:"current",lastUpdatedBy:"dependabot[bot]",lastUpdatedAt:1718429330,formattedLastUpdatedAt:"Jun 15, 2024",frontMatter:{},sidebar:"docs",previous:{title:"About",permalink:"/docs/about"},next:{title:"Examples",permalink:"/docs/examples"}},c={},s=[{value:"Learn ZooKeeper",id:"learn-zookeeper",level:2},{value:"Using Curator",id:"using-curator",level:2},{value:"Getting a Connection",id:"getting-a-connection",level:2},{value:"Calling ZooKeeper Directly",id:"calling-zookeeper-directly",level:2},{value:"Recipes",id:"recipes",level:2},{value:"Distributed Lock",id:"distributed-lock",level:3},{value:"Leader Election",id:"leader-election",level:3}],u={toc:s},p="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getting-started"},"Getting Started"),(0,a.kt)("h2",{id:"learn-zookeeper"},"Learn ZooKeeper"),(0,a.kt)("p",null,"Curator users are assumed to know ZooKeeper. A good place to start is here: ",(0,a.kt)("a",{parentName:"p",href:"https://zookeeper.apache.org/doc/current/zookeeperStarted.html"},"https://zookeeper.apache.org/doc/current/zookeeperStarted.html")),(0,a.kt)("h2",{id:"using-curator"},"Using Curator"),(0,a.kt)("p",null,"The Curator JARs are available from Maven Central. The various artifacts are listed on the ",(0,a.kt)("a",{parentName:"p",href:"/docs/about"},"main page"),". Users of Maven, Gradle, Ant, etc. can easily include Curator into their build script."),(0,a.kt)("p",null,"Most users will want to use one of Curator's pre-built recipes. So, the curator-recipes is the correct artifact to use. If you only want a wrapper around ZooKeeper that adds connection management and retry policies, use curator-framework."),(0,a.kt)("h2",{id:"getting-a-connection"},"Getting a Connection"),(0,a.kt)("p",null,"Curator uses ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Fluent_interface"},"Fluent Style"),". If you haven't used this before, it might seem odd, so it's suggested that you familiarize yourself with the style."),(0,a.kt)("p",null,"Curator connection instances (",(0,a.kt)("inlineCode",{parentName:"p"},"CuratorFramework"),") are allocated from the ",(0,a.kt)("inlineCode",{parentName:"p"},"CuratorFrameworkFactory"),". You only need ",(0,a.kt)("strong",{parentName:"p"},"one")," ",(0,a.kt)("inlineCode",{parentName:"p"},"CuratorFramework")," object for each ZooKeeper cluster you are connecting to:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"CuratorFrameworkFactory.newClient(zookeeperConnectionString, retryPolicy)\n")),(0,a.kt)("p",null,"This will create a connection to a ZooKeeper cluster using default values. The only thing that you need to specify is the retry policy. For most cases, you should use:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"RetryPolicy retryPolicy = new ExponentialBackoffRetry(1000, 3)\nCuratorFramework client = CuratorFrameworkFactory.newClient(zookeeperConnectionString, retryPolicy);\nclient.start();\n")),(0,a.kt)("p",null,"The client must be started (and closed when no longer needed)."),(0,a.kt)("h2",{id:"calling-zookeeper-directly"},"Calling ZooKeeper Directly"),(0,a.kt)("p",null,"Once you have a CuratorFramework instance, you can make direct calls to ZooKeeper in a similar way to using the raw ZooKeeper object provided in the ZooKeeper distribution. E.g.:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'client.create().forPath("/my/path", myData)\n')),(0,a.kt)("p",null,"The benefit here is that Curator manages the ZooKeeper connection and will retry operations if there are connection problems."),(0,a.kt)("h2",{id:"recipes"},"Recipes"),(0,a.kt)("h3",{id:"distributed-lock"},"Distributed Lock"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"InterProcessMutex lock = new InterProcessMutex(client, lockPath);\nif (lock.acquire(maxWait, waitUnit)) {\n    try {\n        // do some work inside of the critical section here\n    } finally {\n        lock.release();\n    }\n}\n")),(0,a.kt)("h3",{id:"leader-election"},"Leader Election"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"LeaderSelectorListener listener = new LeaderSelectorListenerAdapter() {\n    public void takeLeadership(CuratorFramework client) throws Exception {\n        // this callback will get called when you are the leader\n        // do whatever leader work you need to and only exit\n        // this method when you want to relinquish leadership\n    }\n}\n\nLeaderSelector selector = new LeaderSelector(client, path, listener);\nselector.autoRequeue();  // not required, but this is behavior that you will probably expect\nselector.start();\n")))}d.isMDXComponent=!0}}]);